{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/api/:path*",
      "headers": [
        {
          "key": "Access-Control-Allow-Origin",
          "value": "*"
        },
        {
          "key": "Access-Control-Allow-Methods",
          "value": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "Content-Type, Authorization"
        }
      ],
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/boards",
      "regex": "^/boards(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/boards(?:/)?$"
    },
    {
      "page": "/boards/designer",
      "regex": "^/boards/designer(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/boards/designer(?:/)?$"
    },
    {
      "page": "/boards/orders",
      "regex": "^/boards/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/boards/orders(?:/)?$"
    },
    {
      "page": "/devices",
      "regex": "^/devices(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/devices(?:/)?$"
    },
    {
      "page": "/devices/builder",
      "regex": "^/devices/builder(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/devices/builder(?:/)?$"
    },
    {
      "page": "/devices/orders",
      "regex": "^/devices/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/devices/orders(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/parts",
      "regex": "^/parts(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/parts(?:/)?$"
    },
    {
      "page": "/parts/add",
      "regex": "^/parts/add(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/parts/add(?:/)?$"
    },
    {
      "page": "/parts/orders",
      "regex": "^/parts/orders(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/parts/orders(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/under-construction",
      "regex": "^/under\\-construction(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/under\\-construction(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}